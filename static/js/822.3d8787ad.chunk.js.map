{"version":3,"file":"static/js/822.3d8787ad.chunk.js","mappings":"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","sources":["webpack://gamestore/./src/components/error/ErrorMessage.module.scss?3a12","components/error/ErrorMessage.tsx","webpack://gamestore/./src/components/search/Search.module.scss?1827","components/search/Search.tsx","webpack://gamestore/./src/components/searchCategory/SearchCategory.module.scss?d944","components/searchCategory/SearchCategory.tsx","webpack://gamestore/./src/components/sort/Sort.module.scss?a1d6","components/sort/Sort.tsx","webpack://gamestore/./src/components/catalog/Catalog.module.scss?27ee","components/catalog/Catalog.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"errorMassege\":\"ErrorMessage_errorMassege__DkmlH\"};","import React, { memo } from \"react\";\r\nimport { ErrorMessageType } from \"../types/type\";\r\nimport classes from \"./ErrorMessage.module.scss\";\r\n\r\nconst ErrorMessage: React.FC<ErrorMessageType> = memo(({ error }) => {\r\n   return (\r\n      <div className={classes.errorMassege}>\r\n         Ошибка получения данных: {error}\r\n      </div>\r\n   );\r\n});\r\n\r\nexport default ErrorMessage;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"wrapper__search\":\"Search_wrapper__search__gZjwd\",\"search_image\":\"Search_search_image__Y3oC4\",\"input_search\":\"Search_input_search__5bEZE\"};","import React, { memo } from \"react\";\r\nimport searchImage from \"../../assets/img/search.png\";\r\nimport classes from \"./Search.module.scss\"\r\n\r\ntype SearchPropsType = {\r\n   value: string,\r\n   onChangeSerachInput: (e:string) => void\r\n   setValue: (e:string) => void\r\n}\r\n\r\nconst Search: React.FC<SearchPropsType> = memo(({ value, onChangeSerachInput, setValue }) => {\r\n\r\n   const onChange = (e:React.ChangeEvent<HTMLInputElement>) => {\r\n      onChangeSerachInput(e.target.value)\r\n      setValue(e.target.value)\r\n   }\r\n\r\n   return (\r\n      <div className={classes.wrapper__search}>\r\n         <img className={classes.search_image} src={searchImage} alt=\"search\" />\r\n         <input\r\n            className={classes.input_search}\r\n            type=\"search\"\r\n            placeholder=\"Введите название игры\"\r\n            value={value}\r\n            onChange={onChange}\r\n         />\r\n      </div>\r\n   );\r\n})\r\n\r\nexport default Search;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"janres\":\"SearchCategory_janres__gWjk-\",\"visibleChengeCategory\":\"SearchCategory_visibleChengeCategory__z5nTk\",\"icon\":\"SearchCategory_icon__TU5Xl\",\"displayListOn\":\"SearchCategory_displayListOn__-9SmO\",\"displayListOff\":\"SearchCategory_displayListOff__U4dlt\"};","import React, { memo } from \"react\";\r\nimport { FiChevronDown, FiChevronUp } from \"react-icons/fi\";\r\nimport classes from \"./SearchCategory.module.scss\";\r\n\r\ntype SearchCategoryPropsType = {\r\n   category: string[],\r\n   selectListItem: number,\r\n   visibleList: boolean,\r\n   setVisibleList: (visibleList:boolean) => void,\r\n   onChangeCategory: (index: number) => void,\r\n}\r\n\r\nconst SearchCategory: React.FC<SearchCategoryPropsType> = memo(({\r\n   category,\r\n   selectListItem,\r\n   visibleList,\r\n   setVisibleList,\r\n   onChangeCategory,\r\n}) => {\r\n   return (\r\n      <div>\r\n         <ul\r\n            onClick={() => setVisibleList(!visibleList)}\r\n            className={classes.janres}\r\n         >\r\n            {!visibleList ? (\r\n               <div className={classes.icon}>\r\n                  <FiChevronDown size={20} />\r\n               </div>\r\n            ) : (\r\n               <div className={classes.icon}>\r\n                  <FiChevronUp size={20} />\r\n               </div>\r\n            )}\r\n            {selectListItem !== 0 && !selectListItem && (\r\n               <div className={classes.visibleChengeCategory}>\r\n                  выберите категорию\r\n               </div>\r\n            )}\r\n            {category[selectListItem]}\r\n            {category.map((item, index) => (\r\n               <li\r\n                  onClick={() => onChangeCategory(index)}\r\n                  className={\r\n                     visibleList\r\n                        ? classes.displayListOn\r\n                        : classes.displayListOff\r\n                  }\r\n                  key={item}\r\n                  value={index}\r\n               >\r\n                  {item}\r\n               </li>\r\n            ))}\r\n         </ul>\r\n      </div>\r\n   );\r\n})\r\n\r\nexport default SearchCategory;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"sortItemListOn\":\"Sort_sortItemListOn__nHbiO\",\"sortItemListOff\":\"Sort_sortItemListOff__56Y3R\"};","import React from \"react\";\r\nimport classes from \"./Sort.module.scss\";\r\n\r\ntype SortPropsType = {\r\n   sortListSelect: number,\r\n   sortList: {name: string, order: string}[],\r\n   sortListView: boolean,\r\n   onClickSelectSortValue: (index:number) => void,\r\n}\r\n\r\nconst Sort: React.FC<SortPropsType> = React.memo(({\r\n   sortListSelect,\r\n   sortList,\r\n   sortListView,\r\n   onClickSelectSortValue,\r\n}) => {\r\n   return (\r\n      <div>\r\n         Сортировать по: <p>{sortList[sortListSelect].name}</p>\r\n         {sortList.map((item, index) => (\r\n            <div\r\n               onClick={() => onClickSelectSortValue(index)}\r\n               key={index}\r\n               className={\r\n                  sortListView\r\n                     ? classes.sortItemListOn\r\n                     : classes.sortItemListOff\r\n               }\r\n            >\r\n               {item.name}\r\n            </div>\r\n         ))}\r\n      </div>\r\n   );\r\n})\r\n\r\nexport default Sort;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"conteiner__catalog\":\"Catalog_conteiner__catalog__zPt3T\",\"sortList\":\"Catalog_sortList__VON1a\",\"conteiner__catalog_game\":\"Catalog_conteiner__catalog_game__NIvAw\",\"btn_wave\":\"Catalog_btn_wave__igEUg\"};","import React, { useState, useEffect, useRef, useCallback } from \"react\";\r\nimport debounce from \"lodash.debounce\";\r\nimport qs from \"qs\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport LoadingSceletonItemGame from \"../SceletonItem/loadingSceletonItemGame/LoadingSceletonItemGame\";\r\nimport ErrorMessage from \"../error/ErrorMessage\";\r\nimport GameItem from \"./gameItem/GameItem\";\r\nimport Search from \"../search/Search\";\r\nimport SearchCategory from \"../searchCategory/SearchCategory\";\r\nimport Sort from \"../sort/Sort\";\r\nimport API from \"../../API/API\";\r\n//import { useGetItemsQuery } from \"../../API/ApiSlice\"              //! RTKQuery\r\nimport classes from \"./Catalog.module.scss\";\r\nimport { GameType } from \"../types/type\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { gameInCartSelector, totalPriceSelector } from \"../store/cartReducer/cartSlice\";\r\n\r\nconst category: string[] = [\r\n   \"Все\",\r\n   \"Экшен\",\r\n   \"Приключения\",\r\n   \"Стратегии\",\r\n   \"РПГ\",\r\n   \"Гонки\",\r\n   \"Симулятор\",\r\n   \"Открытый мир\",\r\n   \"Шутер\",\r\n   \"Война\",\r\n   \"Глубокий сюжет\",\r\n   \"Протагонистка\",\r\n];\r\n\r\ntype sortListType = {\r\n   name: \"цена меньше\" | \"цена больше\" | \"по алфавиту\" | \"сначала новые\";\r\n   order: \"price&order=asc\" | \"price&order=desc\" | \"title\" | \"year&order=desc\";\r\n}[];\r\n\r\nconst sortList: sortListType = [\r\n   { name: \"цена меньше\", order: \"price&order=asc\" },\r\n   { name: \"цена больше\", order: \"price&order=desc\" },\r\n   { name: \"по алфавиту\", order: \"title\" },\r\n   { name: \"сначала новые\", order: \"year&order=desc\" },\r\n];\r\n\r\ntype BodyClick = MouseEvent & {\r\n   path: Node[];\r\n};\r\n\r\nconst Catalog: React.FC = () => {\r\n   const [data, setData] = useState<GameType[]>([]);\r\n   const [isLoadingGame, setIsLoadingGame] = useState<boolean>(true);\r\n   const [visibleList, setVisibleList] = useState<boolean>(false);\r\n   const [selectListItem, setSelectListItem] = useState<number>(0);\r\n   const [error, setError] = useState<string>(\"\");\r\n   const [selectCategory, setSelectCategory] = useState<string | null>(null);\r\n   const [sortListView, setSortListView] = useState<boolean>(false);\r\n   const [sortListSelect, setSortListSelect] = useState<number>(0);\r\n   const [selectSort, setSelectSort] = useState<string | number>(0);\r\n   const [search, setSearch] = useState<string>(\"\");\r\n   const [value, setValue] = useState<string>(\"\");\r\n   const navigate = useNavigate();\r\n   const sortRef = useRef<HTMLDivElement>(null);\r\n   const categoryRef = useRef<HTMLDivElement>(null);\r\n   const items: GameType[] = useSelector(gameInCartSelector);\r\n   const totalPrice = useSelector(totalPriceSelector);\r\n   const isMounted = React.useRef(false);\r\n\r\n   React.useEffect(()=> {\r\n      if (isMounted.current) {\r\n         const localStorageData = JSON.stringify(items);\r\n         const localStorageTotalPrice = JSON.stringify(totalPrice);\r\n         localStorage.setItem('cart', localStorageData);\r\n         localStorage.setItem('cartTotalPrice', localStorageTotalPrice);\r\n      }\r\n      isMounted.current = true;\r\n   }, [items,totalPrice])\r\n  \r\n   // const {                                     //! RTKQuery\r\n   //    data: items = [],\r\n   //    isLoading,\r\n   //    isFetching,\r\n   //    isError,\r\n   //    isSuccess,\r\n   // } = useGetItemsQuery()\r\n\r\n   useEffect(() => {\r\n      const handelCklickBody = (e: MouseEvent) => {\r\n         const _e = e as BodyClick;\r\n         if (sortRef.current && !_e.path.includes(sortRef.current)) {\r\n            setSortListView(false);\r\n         }\r\n         if (categoryRef.current && !_e.path.includes(categoryRef.current)) {\r\n            setVisibleList(false);\r\n         }\r\n      };\r\n      document.body.addEventListener(\"click\", handelCklickBody);\r\n      return () => {\r\n         document.body.removeEventListener(\"click\", handelCklickBody);\r\n      };\r\n   }, []);\r\n\r\n   useEffect(() => {\r\n      API.get(\r\n         `${\r\n            search\r\n               ? `?title=${search}`\r\n               : !selectListItem\r\n               ? `?sortBy=${selectSort ? selectSort : \"price&order=asc\"}`\r\n               : `?search=${selectCategory}&sortBy=${selectSort ? selectSort : \"price&order=asc\"}`\r\n         }`\r\n      )\r\n         .then((response) => {\r\n            setData(response.data);\r\n            setIsLoadingGame(false);\r\n         })\r\n         .catch((error) => {\r\n            setError(error.message);\r\n         });\r\n   }, [selectListItem, selectCategory, selectSort, search, navigate]);\r\n\r\n   useEffect(() => {\r\n      const queryString = qs.stringify({\r\n         selectListItem,\r\n         selectCategory,\r\n         selectSort,\r\n         search,\r\n      });\r\n      navigate(`?${queryString}`);\r\n   }, [selectListItem, selectCategory, selectSort, search, navigate]);\r\n\r\n   const onChangeCategory = useCallback((index: number) => {\r\n      setIsLoadingGame(true);\r\n      setSelectListItem(index);\r\n      setSelectCategory(category[index]);\r\n      setError(\"\");\r\n   }, []);\r\n\r\n   const onClickSelectSortValue = useCallback((index: number) => {\r\n      setIsLoadingGame(true);\r\n      setSortListSelect(index);\r\n      setSelectSort(sortList[index].order);\r\n      setError(\"\");\r\n   }, []);\r\n\r\n   const onChangeSerachInput = useCallback(\r\n      debounce((value: string) => {\r\n         setValue(value);\r\n         setSearch(value);\r\n      }, 250),\r\n      []\r\n   );\r\n\r\n   return (\r\n      <div className={classes.conteiner__catalog}>\r\n         <div ref={categoryRef}>\r\n            <SearchCategory\r\n               category={category}\r\n               selectListItem={selectListItem}\r\n               visibleList={visibleList}\r\n               setVisibleList={setVisibleList}\r\n               onChangeCategory={onChangeCategory}\r\n            />\r\n         </div>\r\n         <div>\r\n            <Search\r\n               value={value}\r\n               setValue={setValue}\r\n               onChangeSerachInput={onChangeSerachInput}\r\n            />\r\n         </div>\r\n         <div\r\n            ref={sortRef}\r\n            className={classes.sortList}\r\n            onClick={() => setSortListView(!sortListView)}\r\n         >\r\n            <Sort\r\n               sortListSelect={sortListSelect}\r\n               sortList={sortList}\r\n               sortListView={sortListView}\r\n               onClickSelectSortValue={onClickSelectSortValue}\r\n            />\r\n         </div>\r\n         {error ? <ErrorMessage error={error} /> : \"\"}\r\n         <div className={classes.conteiner__catalog_game}>\r\n            {isLoadingGame\r\n               ? [...new Array(6)].map((_, i) => (\r\n                    <LoadingSceletonItemGame key={i} />\r\n                 ))\r\n               : data &&\r\n                 data.map((game) => <GameItem game={game} key={game.id} />)}\r\n         </div>\r\n      </div>\r\n   );\r\n};\r\n\r\nexport default Catalog;\r\n"],"names":["memo","error","className","classes","value","onChangeSerachInput","setValue","src","alt","type","placeholder","onChange","e","target","SearchCategory","category","selectListItem","visibleList","setVisibleList","onChangeCategory","onClick","size","map","item","index","Sort","React","sortListSelect","sortList","sortListView","onClickSelectSortValue","name","order","useState","data","setData","isLoadingGame","setIsLoadingGame","setSelectListItem","setError","selectCategory","setSelectCategory","setSortListView","setSortListSelect","selectSort","setSelectSort","search","setSearch","navigate","useNavigate","sortRef","useRef","categoryRef","items","useSelector","gameInCartSelector","totalPrice","totalPriceSelector","isMounted","current","localStorageData","JSON","stringify","localStorageTotalPrice","localStorage","setItem","useEffect","handelCklickBody","_e","path","includes","document","body","addEventListener","removeEventListener","API","then","response","catch","message","queryString","qs","useCallback","debounce","ref","Array","_","i","LoadingSceletonItemGame","game","GameItem","id"],"sourceRoot":""}